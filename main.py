import markups
import telebot
from telebot import types   

with open('constants.txt') as f: #—Å—á–∏—Ç—ã–≤–∞—é –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞
    token = f.readline()

bot = telebot.TeleBot(token)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.from_user.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø–∏—Ü—Ü—ã!', reply_markup=markups.start_menu)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == 'üçï–ó–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É':
        bot.send_message(message.from_user.id, '–ú–µ–Ω—é ‚Üí –ó–∞–∫–∞–∑\n–ö–∞–∫—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–∏—Ü—Ü—É?', reply_markup=markups.order_menu)
    
    elif message.text.lower() == '–ë–æ–ª—å—à—É—é'.lower():
        payment_menu(message) # –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã

    elif message.text.lower() == '–ú–∞–ª–µ–Ω—å–∫—É—é'.lower():
        payment_menu(message)

    elif message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        start_menu(message) # –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"


def start_menu(message):
    bot.send_message(message.from_user.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markups.start_menu)

def payment_menu(message):
    global type_of_pizza
    type_of_pizza = message.text
    bot.send_message(message.from_user.id, '–ö–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ –ø–ª–∞—Ç–∏—Ç—å\n–ù–∞–ª–∏—á–∫–æ–π –∏–ª–∏ –∫–∞—Ä—Ç–æ–π?', reply_markup=markups.payment_menu)
    bot.register_next_step_handler(message, get_info)

def get_info(message):
    global payment_method
    payment_method = message.text
    keyboard = types.InlineKeyboardMarkup()
    key_yes = types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ', callback_data='yes') 
    keyboard.add(key_yes) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    key_no= types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å‚úñÔ∏è', callback_data='no')
    keyboard.add(key_no)
    question = f"–í—ã —Ö–æ—Ç–∏—Ç–µ {type_of_pizza.lower()} –ø–∏—Ü—Ü—É, –æ–ø–ª–∞—Ç–∞ - {payment_method[1:].lower()}"
    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True) # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤
def callback_worker(call):
    if call.data == "yes":
        bot.send_message(call.message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!", reply_markup=markups.start_menu)   
    elif call.data == "no":
        bot.send_message(call.message.chat.id, "–û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞.", reply_markup=markups.start_menu)

    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id) # —É–¥–∞–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —é–∑–µ—Ä–∞


if __name__ == '__main__':
    bot.skip_pending = True
    bot.polling(none_stop=True, interval=0)
